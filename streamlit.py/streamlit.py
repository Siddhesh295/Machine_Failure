# -*- coding: utf-8 -*-
"""streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dHDmz1FhhIIQdk_k9qOw16v2FRfnXouy
"""


import pickle
import streamlit as st
import pandas as pd


# Page config
st.set_page_config(
    page_title="Failure Classifier",
    page_icon="images/icon.png",
)

# Page title
st.title('Machine - Failure Prediction')
st.image('images/maintenance.jpg')
st.write("\n\n")

st.markdown(
    """
   This application facilitates the rapid classification of machine failures using sensor data, expediting the troubleshooting process.
    """
)

# Load the model
with open('model.pkl', 'wb') as model_file:
 pickle.load(model_file)

# Streamlit interface to input data
col1, col2 = st.columns(2)

with col1:
    air = st.number_input(label='Air Temperature')
    process = st.number_input(label='Process Temperature')
    rpm = st.number_input(label='Rotational Speed')

with col2:
    torque = st.number_input(label='Torque')
    tool_wear = st.number_input(label='Tool Wear')
    type = st.selectbox(label='Type', options=['Low', 'Medium', 'High'])

# Function to predict the input
def prediction(air, process, rpm, torque, tool_wear, type):
    # Create a df with input data
    df_input = pd.DataFrame({
        'Air temperature [K]': [air],
        'Process temperature [k]': [process],
        'Rotational speed [rpm]': [rpm],
        'Torque [nm]': [torque],
        'Tool wear [min]': [tool_wear],
        'Type': [type]
    })

    prediction = model.predict(df_input)
    return prediction

# Botton to predict
if st.button('Predict'):
    predict = prediction(air, process, rpm, torque, tool_wear, type)
    st.success(predict)
